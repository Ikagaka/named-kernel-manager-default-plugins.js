{"version":3,"sources":["lib/operation.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,gB,WAAA,gB;;;;;;;0BACL,M,EAAQ;AACZ,aAAO,UAAP,CAAkB,qBAAlB,EAAyC,UAAC,MAAD,EAAY;AACnD,eAAO,IAAP,CAAY,oBAAZ,EAAkC,UAAC,MAAD,EAAY;AAC5C,iBAAO,KAAP,CAAa,OAAb,EAAsB,UAAtB;AACA,iBAAO,KAAP,CAAa,YAAb;AACA,iBAAO,KAAP,CAAa,aAAb;AACA,iBAAO,KAAP,CAAa,cAAb;AACA,iBAAO,KAAP,CAAa,OAAb;AACA,iBAAO,KAAP,CAAa,MAAb;AACA,iBAAO,KAAP,CAAa,qBAAb;AACD,SARD;AASD,OAVD;AAWD;;;;;AAGH;;;IACa,mB,WAAA,mB;;;AACX,+BAAY,OAAZ,EAAqB;AAAA;;AAAA,6HACb,OADa;;AAEnB,UAAK,aAAL,GAAqB,EAArB;AAFmB;AAGpB;;;;;;;;;;;;;;uBAGuB,KAAK,OAAL,CAAa,OAAb,E;;;AAAhB,uB;AACA,sB,GAAS,QAAQ,MAAR,IAAkB,QAAQ,MAAR,CAAe,MAAjC,GAA0C,QAAQ,MAAlD,GAA2D,CAAC,IAAD,C,EAAQ;AAClF;;AACA,uBAAO,GAAP,CAAW,UAAC,SAAD;AAAA,yBAAe,OAAK,UAAL,CAAgB,SAAhB,CAAf;AAAA,iBAAX;;;;;;;;;;;;;;;;;;;+FAGe,O;;;;;;;uBACM,KAAK,OAAL,CAAa,SAAb,CAAuB,OAAvB,C;;;AAAf,sB;;AACN,uBAAO,KAAP;;uBACsB,KAAK,OAAL,CAAa,OAAb,E;;;AAAhB,uB;;AACN,wBAAQ,MAAR,CAAe,IAAf,CAAoB,OAApB;;uBACM,KAAK,OAAL,CAAa,OAAb,CAAqB,OAArB,C;;;;;;;;;;;;;;;;;;gCAGI,O,EAAS;AAAA;;AACnB,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,YAAM,SAAS,OAAK,OAAL,CAAa,MAAb,CAAoB,OAApB,CAAf;AACA,eAAK,aAAL,CAAmB,OAAnB,+DAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5B,yBAAO,OAAK,aAAL,CAAmB,OAAnB,CAAP;AAD4B;AAAA,yBAEN,OAAK,OAAL,CAAa,OAAb,EAFM;;AAAA;AAEtB,yBAFsB;;AAG5B,0BAAQ,MAAR,GAAiB,QAAQ,MAAR,CAAe,MAAf,CAAsB,UAAC,SAAD;AAAA,2BAAe,cAAc,OAA7B;AAAA,mBAAtB,CAAjB;AAH4B;AAAA,yBAItB,OAAK,OAAL,CAAa,OAAb,CAAqB,OAArB,CAJsB;;AAAA;AAK5B;;AAL4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9B;AAOA,eAAO,KAAP;AACD,OAVM,CAAP;AAWD;;;;+FAEkB,U,EAAY,U;;;;;;uBACvB,KAAK,WAAL,CAAiB,UAAjB,C;;;;uBACA,KAAK,UAAL,CAAgB,UAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIA,kBAAQ,GAAR,CAAY,KAAK,OAAL,CAAa,QAAb,GAAwB,GAAxB,CAA4B,UAAC,OAAD;AAAA,yBAAa,OAAK,WAAL,CAAiB,OAAjB,CAAb;AAAA,iBAA5B,CAAZ,C;;;AACN,qBAAK,MAAL,CAAY,IAAZ;;;;;;;;;;;;;;;;;;2BAGK;AACL;AACD;;;wCAEmB,O,EAAS;AAC3B,UAAI,KAAK,aAAL,CAAmB,OAAnB,CAAJ,EAAiC,KAAK,aAAL,CAAmB,OAAnB;AAClC;;;;;AAGH,kDAA8B,mBAA9B,GAAoD,mBAApD;AACA,+CAA2B,IAA3B,CAAgC,gBAAhC","file":"operation.js","sourcesContent":["import {NamedKernelManagerRoutings, NamedKernelManagerControllers, NamedKernelManagerController} from 'named-kernel-manager';\r\n\r\nexport class OperationRouting {\r\n  setup(routes) {\r\n    routes.controller('OperationController', (routes) => {\r\n      routes.from('NamedKernelManager', (routes) => {\r\n        routes.event('start', 'boot_all');\r\n        routes.event('boot_named');\r\n        routes.event('close_named');\r\n        routes.event('change_named');\r\n        routes.event('close');\r\n        routes.event('halt');\r\n        routes.event('kernel_unregistered');\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// TODO 分け方がざっくりしている\r\nexport class OperationController extends NamedKernelManagerController {\r\n  constructor(manager) {\r\n    super(manager);\r\n    this.closeComplete = {};\r\n  }\r\n\r\n  async boot_all() {\r\n    const profile = await this.manager.profile();\r\n    const ghosts = profile.ghosts && profile.ghosts.length ? profile.ghosts : ['js']; // TODO: 無ゴースト起動\r\n    // TODO: 他形式対応\r\n    ghosts.map((ghostname) => this.boot_named(ghostname));\r\n  }\r\n\r\n  async boot_named(namedId) {\r\n    const kernel = await this.manager.loadGhost(namedId);\r\n    kernel.start();\r\n    const profile = await this.manager.profile();\r\n    profile.ghosts.push(namedId);\r\n    await this.manager.profile(profile);\r\n  }\r\n\r\n  close_named(namedId) {\r\n    return new Promise((resolve) => {\r\n      const kernel = this.manager.kernel(namedId);\r\n      this.closeComplete[namedId] = async () => {\r\n        delete this.closeComplete[namedId];\r\n        const profile = await this.manager.profile();\r\n        profile.ghosts = profile.ghosts.filter((ghostname) => ghostname !== namedId);\r\n        await this.manager.profile(profile);\r\n        resolve();\r\n      };\r\n      kernel.close();\r\n    });\r\n  }\r\n\r\n  async change_named(oldNamedId, newNamedId) {\r\n    await this.close_named(oldNamedId);\r\n    await this.boot_named(newNamedId);\r\n  }\r\n\r\n  async close() {\r\n    await Promise.all(this.manager.namedIds().map((namedId) => this.close_named(namedId)));\r\n    this.kernel.halt();\r\n  }\r\n\r\n  halt() {\r\n    // TODO\r\n  }\r\n\r\n  kernel_unregistered(namedId) {\r\n    if (this.closeComplete[namedId]) this.closeComplete[namedId]();\r\n  }\r\n}\r\n\r\nNamedKernelManagerControllers.OperationController = OperationController;\r\nNamedKernelManagerRoutings.push(OperationRouting);\r\n"]}